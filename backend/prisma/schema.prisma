// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @default(uuid())
  firstName  String
  lastName   String
  email      String       @unique
  password   String
  linkedInId String?      @unique
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  Job        Job[]
  refreshToken String? 
  refreshTokenExpires DateTime?
}

model Job {
  id          String      @id @default(uuid())
  userId      String
  user        User        @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  title       String
  company     String
  description String
  location    String?
  interviews  Interview[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

enum InterviewType {
  GENERAL
  BEHAVIORAL
  TECHNICAL
  BUSINESS
  SALARY_NEGOTIATION
  CUSTOM
}

model Interview {
  id           String     @id @default(uuid())
  jobId        String
  job          Job        @relation(fields: [jobId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  title        String
  type         InterviewType @default(GENERAL)
  customType   String?
  context      String?
  overallScore Int?
  questions    Question[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Question {
  id           String    @id @default(uuid())
  interviewId  String
  interview    Interview @relation(fields: [interviewId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  content      String
  userResponse String?
  // audioPath    String?    The path or URL to the audio file
  // audioData    Bytes?     Binary data for the audio recording
  feedback     String?
  score        Int?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}
